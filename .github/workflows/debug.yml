# For better debbuging experience:
    # Set repo variables:
    # ACTIONS_RUNNER_DEBUG=true
    # ACTIONS_STEP_DEBUG=true
    # TODO: evaluate setting this to the .env
name: SyncSystem - Multiplatform - Pipeline Debug

on:
    push:
        branches:
            - main

jobs:
    debug:
        runs-on: ubuntu-latest

        steps:
            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.0'
                tools: composer

            # - name: Change to Repository Directory
            #   run: cd $GITHUB_WORKSPACE

            # - name: Install Composer dependencies
            #   run: composer install
            #   working-directory: ''

            # - name: Check Endpoints
            # #working-directory: ./syncsystem-laravel8-v1
            #   run: |
            #     until $(curl -s -o /dev/null -w "%{http_code}" https://ftppipelinev1backendphplaravel8v1poc1.syncsystem.com.br/system/setup/ https://ftppipelinev1multiplatformphplaravel8v1poc1.syncsystem.com.br/system/setup/ == 200); do
            #     echo "Waiting for endpoints..."
            #     sleep 30
            #     done
            #   timeout-minutes: 5
            #   shell: bash

            - name: Deploy Follow-up Actions (backend)
            #   run: |
            #     status=$(curl --write-out '%{http_code}' --silent --output /dev/null https://ftppipelinev1backendphplaravel8v1poc1.syncsystem.com.br/system/setup/)
            #     if [[ "$status" -ne 200 ]] ; then
            #         echo "Site not reachable"
            #         exit 1
            #     fi

              run: |
                response=$(curl --write-out "\n\nStatus Code: %{http_code}" --silent https://${{ secrets.BACKEND_FTP_ADDRESS }}/system/setup/)
                status=$(echo "$response" | tail -n1 | awk '{print $4}') # Extract status code
                if [[ "$status" -ne 200 ]] ; then
                    echo "Deploy Follow-up Actions Error - Debug and Check Steps/Log"
                    exit 1
                else
                    echo "Deploy Follow-up Actions Successful"
                    echo "Content: $response"
                fi                

            - name: Deploy Follow-up Actions (frontend)
              run: |
                response=$(curl --write-out "\n\nStatus Code: %{http_code}" --silent https://${{ secrets.FRONTEND_FTP_ADDRESS }}/system/setup/)
                status=$(echo "$response" | tail -n1 | awk '{print $4}') # Extract status code
                if [[ "$status" -ne 200 ]] ; then
                    echo "Deploy Follow-up Actions Error - Debug and Check Steps/Log"
                    exit 1
                else
                    echo "Deploy Follow-up Actions Successful"
                    echo "Content: $response"
                fi                
